<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MovieMapper">
	
	<select id="selectAll" resultType="Movie">
		select *
		from tb_movie
	</select>
	
	<insert id="insertmovie" parameterType="Movie">
		insert into tb_movie(movie_id, title, release_date, plot, rating, 
		director_nm, actor_nm, boxoffice_order, star_avg_rate, create_at, update_at)
		values(#{movie_id}, #{title}, #{release_date}, #{plot}, #{rating}, 
		#{director_nm}, #{actor_nm}, #{boxoffice_order,jdbcType=INTEGER}, #{star_avg_rate}, 
		#{create_at}, #{update_at})
	</insert>
	
	<select id="findmovie" parameterType="String" resultType="int">
		select count(*)
		from tb_movie
		where movie_id = #{movie_id}
	</select>
	
	<select id="moviedata" parameterType="String" resultType="Moviedata">
  		SELECT
	    tb_movie.MOVIE_ID,
	    TO_CHAR(tb_movie.actor_nm),
	    tb_movie.boxoffice_order,
	    tb_movie.director_nm,
	    TO_CHAR(tb_movie.plot),
	    tb_movie.rating,
	    tb_movie.release_date,
	    tb_movie.star_avg_rate,
	    tb_movie.title,
	    LISTAGG(mp_movie_category.CATEGORY_ID, ' #') WITHIN GROUP (ORDER BY mp_movie_category.CATEGORY_ID) AS category_id
	  FROM tb_movie
	  INNER JOIN mp_movie_category ON tb_movie.movie_id = mp_movie_category.movie_id
	  WHERE tb_movie.movie_id = #{movieId}
	  GROUP BY tb_movie.MOVIE_ID, TO_CHAR(tb_movie.actor_nm), tb_movie.boxoffice_order, tb_movie.create_at, tb_movie.director_nm, TO_CHAR(tb_movie.plot), 
	  tb_movie.rating, tb_movie.release_date, tb_movie.star_avg_rate, tb_movie.title, tb_movie.update_at
	</select>
	
	<update id="movie_star_rate_calculator" parameterType="String">
        UPDATE tb_movie
		SET STAR_AVG_RATE = NVL((SELECT avg(star_rate) FROM tb_post WHERE movie_id = #{movie_id}), 0)
		WHERE movie_id = #{movie_id}
    </update>
	
</mapper>






